// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: std_rpc_meta.proto

#ifndef PROTOBUF_std_5frpc_5fmeta_2eproto__INCLUDED
#define PROTOBUF_std_5frpc_5fmeta_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_std_5frpc_5fmeta_2eproto();
void protobuf_AssignDesc_std_5frpc_5fmeta_2eproto();
void protobuf_ShutdownFile_std_5frpc_5fmeta_2eproto();

class RpcMeta;
class RpcRequestMeta;
class RpcResponseMeta;

// ===================================================================

class RpcMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RpcMeta) */ {
 public:
  RpcMeta();
  virtual ~RpcMeta();

  RpcMeta(const RpcMeta& from);

  inline RpcMeta& operator=(const RpcMeta& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcMeta& default_instance();

  void Swap(RpcMeta* other);

  // implements Message ----------------------------------------------

  inline RpcMeta* New() const { return New(NULL); }

  RpcMeta* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RpcMeta& from);
  void MergeFrom(const RpcMeta& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RpcMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RpcRequestMeta request = 1;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 1;
  const ::RpcRequestMeta& request() const;
  ::RpcRequestMeta* mutable_request();
  ::RpcRequestMeta* release_request();
  void set_allocated_request(::RpcRequestMeta* request);

  // optional .RpcResponseMeta response = 2;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 2;
  const ::RpcResponseMeta& response() const;
  ::RpcResponseMeta* mutable_response();
  ::RpcResponseMeta* release_response();
  void set_allocated_response(::RpcResponseMeta* response);

  // optional string payload = 3;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 3;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const char* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:RpcMeta)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_payload();
  inline void clear_has_payload();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::RpcRequestMeta* request_;
  ::RpcResponseMeta* response_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  friend void  protobuf_AddDesc_std_5frpc_5fmeta_2eproto();
  friend void protobuf_AssignDesc_std_5frpc_5fmeta_2eproto();
  friend void protobuf_ShutdownFile_std_5frpc_5fmeta_2eproto();

  void InitAsDefaultInstance();
  static RpcMeta* default_instance_;
};
// -------------------------------------------------------------------

class RpcRequestMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RpcRequestMeta) */ {
 public:
  RpcRequestMeta();
  virtual ~RpcRequestMeta();

  RpcRequestMeta(const RpcRequestMeta& from);

  inline RpcRequestMeta& operator=(const RpcRequestMeta& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcRequestMeta& default_instance();

  void Swap(RpcRequestMeta* other);

  // implements Message ----------------------------------------------

  inline RpcRequestMeta* New() const { return New(NULL); }

  RpcRequestMeta* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RpcRequestMeta& from);
  void MergeFrom(const RpcRequestMeta& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RpcRequestMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string service_name = 1;
  bool has_service_name() const;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // required string method_name = 2;
  bool has_method_name() const;
  void clear_method_name();
  static const int kMethodNameFieldNumber = 2;
  const ::std::string& method_name() const;
  void set_method_name(const ::std::string& value);
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  ::std::string* mutable_method_name();
  ::std::string* release_method_name();
  void set_allocated_method_name(::std::string* method_name);

  // @@protoc_insertion_point(class_scope:RpcRequestMeta)
 private:
  inline void set_has_service_name();
  inline void clear_has_service_name();
  inline void set_has_method_name();
  inline void clear_has_method_name();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr method_name_;
  friend void  protobuf_AddDesc_std_5frpc_5fmeta_2eproto();
  friend void protobuf_AssignDesc_std_5frpc_5fmeta_2eproto();
  friend void protobuf_ShutdownFile_std_5frpc_5fmeta_2eproto();

  void InitAsDefaultInstance();
  static RpcRequestMeta* default_instance_;
};
// -------------------------------------------------------------------

class RpcResponseMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RpcResponseMeta) */ {
 public:
  RpcResponseMeta();
  virtual ~RpcResponseMeta();

  RpcResponseMeta(const RpcResponseMeta& from);

  inline RpcResponseMeta& operator=(const RpcResponseMeta& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcResponseMeta& default_instance();

  void Swap(RpcResponseMeta* other);

  // implements Message ----------------------------------------------

  inline RpcResponseMeta* New() const { return New(NULL); }

  RpcResponseMeta* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RpcResponseMeta& from);
  void MergeFrom(const RpcResponseMeta& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RpcResponseMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error_code = 1;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RpcResponseMeta)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 error_code_;
  friend void  protobuf_AddDesc_std_5frpc_5fmeta_2eproto();
  friend void protobuf_AssignDesc_std_5frpc_5fmeta_2eproto();
  friend void protobuf_ShutdownFile_std_5frpc_5fmeta_2eproto();

  void InitAsDefaultInstance();
  static RpcResponseMeta* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcMeta

// optional .RpcRequestMeta request = 1;
inline bool RpcMeta::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcMeta::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RpcMeta::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RpcMeta::clear_request() {
  if (request_ != NULL) request_->::RpcRequestMeta::Clear();
  clear_has_request();
}
inline const ::RpcRequestMeta& RpcMeta::request() const {
  // @@protoc_insertion_point(field_get:RpcMeta.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::RpcRequestMeta* RpcMeta::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::RpcRequestMeta;
  }
  // @@protoc_insertion_point(field_mutable:RpcMeta.request)
  return request_;
}
inline ::RpcRequestMeta* RpcMeta::release_request() {
  // @@protoc_insertion_point(field_release:RpcMeta.request)
  clear_has_request();
  ::RpcRequestMeta* temp = request_;
  request_ = NULL;
  return temp;
}
inline void RpcMeta::set_allocated_request(::RpcRequestMeta* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:RpcMeta.request)
}

// optional .RpcResponseMeta response = 2;
inline bool RpcMeta::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpcMeta::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RpcMeta::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RpcMeta::clear_response() {
  if (response_ != NULL) response_->::RpcResponseMeta::Clear();
  clear_has_response();
}
inline const ::RpcResponseMeta& RpcMeta::response() const {
  // @@protoc_insertion_point(field_get:RpcMeta.response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::RpcResponseMeta* RpcMeta::mutable_response() {
  set_has_response();
  if (response_ == NULL) {
    response_ = new ::RpcResponseMeta;
  }
  // @@protoc_insertion_point(field_mutable:RpcMeta.response)
  return response_;
}
inline ::RpcResponseMeta* RpcMeta::release_response() {
  // @@protoc_insertion_point(field_release:RpcMeta.response)
  clear_has_response();
  ::RpcResponseMeta* temp = response_;
  response_ = NULL;
  return temp;
}
inline void RpcMeta::set_allocated_response(::RpcResponseMeta* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:RpcMeta.response)
}

// optional string payload = 3;
inline bool RpcMeta::has_payload() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RpcMeta::set_has_payload() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RpcMeta::clear_has_payload() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RpcMeta::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payload();
}
inline const ::std::string& RpcMeta::payload() const {
  // @@protoc_insertion_point(field_get:RpcMeta.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcMeta::set_payload(const ::std::string& value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RpcMeta.payload)
}
inline void RpcMeta::set_payload(const char* value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RpcMeta.payload)
}
inline void RpcMeta::set_payload(const char* value, size_t size) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RpcMeta.payload)
}
inline ::std::string* RpcMeta::mutable_payload() {
  set_has_payload();
  // @@protoc_insertion_point(field_mutable:RpcMeta.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcMeta::release_payload() {
  // @@protoc_insertion_point(field_release:RpcMeta.payload)
  clear_has_payload();
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcMeta::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:RpcMeta.payload)
}

// -------------------------------------------------------------------

// RpcRequestMeta

// required string service_name = 1;
inline bool RpcRequestMeta::has_service_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcRequestMeta::set_has_service_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RpcRequestMeta::clear_has_service_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RpcRequestMeta::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_service_name();
}
inline const ::std::string& RpcRequestMeta::service_name() const {
  // @@protoc_insertion_point(field_get:RpcRequestMeta.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcRequestMeta::set_service_name(const ::std::string& value) {
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RpcRequestMeta.service_name)
}
inline void RpcRequestMeta::set_service_name(const char* value) {
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RpcRequestMeta.service_name)
}
inline void RpcRequestMeta::set_service_name(const char* value, size_t size) {
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RpcRequestMeta.service_name)
}
inline ::std::string* RpcRequestMeta::mutable_service_name() {
  set_has_service_name();
  // @@protoc_insertion_point(field_mutable:RpcRequestMeta.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcRequestMeta::release_service_name() {
  // @@protoc_insertion_point(field_release:RpcRequestMeta.service_name)
  clear_has_service_name();
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcRequestMeta::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    set_has_service_name();
  } else {
    clear_has_service_name();
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:RpcRequestMeta.service_name)
}

// required string method_name = 2;
inline bool RpcRequestMeta::has_method_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpcRequestMeta::set_has_method_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RpcRequestMeta::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RpcRequestMeta::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method_name();
}
inline const ::std::string& RpcRequestMeta::method_name() const {
  // @@protoc_insertion_point(field_get:RpcRequestMeta.method_name)
  return method_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcRequestMeta::set_method_name(const ::std::string& value) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RpcRequestMeta.method_name)
}
inline void RpcRequestMeta::set_method_name(const char* value) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RpcRequestMeta.method_name)
}
inline void RpcRequestMeta::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RpcRequestMeta.method_name)
}
inline ::std::string* RpcRequestMeta::mutable_method_name() {
  set_has_method_name();
  // @@protoc_insertion_point(field_mutable:RpcRequestMeta.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcRequestMeta::release_method_name() {
  // @@protoc_insertion_point(field_release:RpcRequestMeta.method_name)
  clear_has_method_name();
  return method_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcRequestMeta::set_allocated_method_name(::std::string* method_name) {
  if (method_name != NULL) {
    set_has_method_name();
  } else {
    clear_has_method_name();
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:RpcRequestMeta.method_name)
}

// -------------------------------------------------------------------

// RpcResponseMeta

// optional int32 error_code = 1;
inline bool RpcResponseMeta::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcResponseMeta::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RpcResponseMeta::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RpcResponseMeta::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 RpcResponseMeta::error_code() const {
  // @@protoc_insertion_point(field_get:RpcResponseMeta.error_code)
  return error_code_;
}
inline void RpcResponseMeta::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:RpcResponseMeta.error_code)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_std_5frpc_5fmeta_2eproto__INCLUDED
